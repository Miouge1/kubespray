---
# Tests for contrib/terraform/
.terraform_install:
  extends: .job
  before_script:
    - update-alternatives --install /usr/bin/python python /usr/bin/python3 1
    - ./tests/scripts/rebase.sh
    - ./tests/scripts/testcases_prepare.sh
    - ./tests/scripts/terraform_install.sh
    # Set Ansible config
    - cp ansible.cfg ~/.ansible.cfg
    # Prepare inventory
    - cp contrib/terraform/$PROVIDER/sample-inventory/cluster.tfvars .
    - ln -s contrib/terraform/$PROVIDER/hosts
    - terraform init contrib/terraform/$PROVIDER
    # Copy SSH keypair
    - mkdir -p ~/.ssh
    - echo "$PACKET_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo "$PACKET_PUBLIC_KEY" | base64 -d > ~/.ssh/id_rsa.pub

.terraform_validate:
  extends: .terraform_install
  stage: unit-tests
  tags: [light]
  only: ['master', /^pr-.*$/]
  script:
    - terraform validate -var-file=cluster.tfvars contrib/terraform/$PROVIDER
    - terraform fmt -check -diff contrib/terraform/$PROVIDER

.terraform_apply:
  extends: .terraform_install
  tags: [light]
  stage: deploy-part3
  when: manual
  only: [/^pr-.*$/]
  artifacts:
    paths:
      - cluster-dump/
  variables:
    ANSIBLE_INVENTORY_UNPARSED_FAILED: "true"
    ANSIBLE_INVENTORY: hosts
    CI_PLATFORM: tf
    TF_VAR_ssh_user: $SSH_USER
    TF_VAR_cluster_name: $CI_JOB_ID
  script:
    - tests/scripts/testcases_run.sh
  after_script:
    # Cleanup regardless of exit code
    - chronic ./tests/scripts/testcases_cleanup.sh

tf-validate-openstack:
  extends: .terraform_validate
  variables:
    TF_VERSION: 0.12.24
    PROVIDER: openstack
    CLUSTER: $CI_COMMIT_REF_NAME

tf-validate-packet:
  extends: .terraform_validate
  variables:
    TF_VERSION: 0.12.24
    PROVIDER: packet
    CLUSTER: $CI_COMMIT_REF_NAME

tf-validate-aws:
  extends: .terraform_validate
  variables:
    TF_VERSION: 0.12.24
    PROVIDER: aws
    CLUSTER: $CI_COMMIT_REF_NAME